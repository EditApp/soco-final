{"version":3,"sources":["app/js/charts.js","app/js/map.js","app/js/script.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/aA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArFA;AAAA","file":"public/js/app.js","sourcesContent":["'use strict';\r\n\r\nvar $ = require('jquery');\r\nvar Chart = require('chart.js');\r\n\r\nvar ctx = document.getElementById('chart1').getContext('2d');\r\nctx.height = 180;\r\nvar chart = new Chart(ctx, {\r\n    // The type of chart we want to create\r\n    type: 'bar',\r\n\r\n    // The data for our dataset\r\n    data: {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n        datasets: [{\r\n            label: \"My First dataset\",\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            data: [0, 10, 5, 2, 20, 30, 45],\r\n        }]\r\n    },\r\n\r\n    // Configuration options go here\r\n    options: {\r\n        maintainAspectRatio: false,\r\n    }\r\n});","'use strict';\r\n\r\nvar $ = require('jquery');\r\nrequire('js-info-bubble');\r\n\r\nvar Map = {\r\n    map: null,\r\n    markers: [],\r\n    bounds: null\r\n};\r\n\r\n// Injection du code html de la map après le chargement du fichier JS\r\nMap.init = function () {\r\n    var s = document.createElement(\"script\");\r\n    s.type = \"text/javascript\";\r\n\r\n    // Après le chargement de la map la fonction \"window.initMap\" sera executer\r\n    s.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAzoU2yKc6Wuh4F-P6I6WQ4204SgEyJVZM&callback=initMap\";\r\n    $(\"head\").append(s);\r\n};\r\n\r\n// Ajout du marqueur dans la map\r\nMap.setMarker = function ({ icon, position, title, content, index, type }) {\r\n\r\n    // Ajout du marqueur sur la map\r\n    let marker = new google.maps.Marker({\r\n        position,\r\n        icon,\r\n        map: this.map,\r\n        title,\r\n        infowindow: new window.InfoBubble({\r\n            content,\r\n            shadowStyle: 0,\r\n            padding: 0,\r\n            backgroundColor: 'transparent',\r\n            borderRadius: 0,\r\n            arrowSize: 0,\r\n            borderWidth: 0,\r\n            borderColor: '#cccccc',\r\n            disableAutoPan: false,\r\n            hideCloseButton: true,\r\n            arrowPosition: 50,\r\n            arrowStyle: 0,\r\n            maxWidth: 268,\r\n            maxHeight: 198,\r\n            minWidth: 268,\r\n            minHeight: 198\r\n        }),\r\n        // On lui affect un index qui servera de connexion \r\n        // avec le map module en DOM\r\n        index,\r\n        type\r\n    });\r\n\r\n    marker.addListener('click', function () {\r\n        // Affichage du marqueur séléctionné\r\n        Map.selectMarker(this);\r\n    });\r\n\r\n    this.markers.push(marker);\r\n\r\n    // Changement de l'affichage de la map pour afficher tout les\r\n    // marqueur ajouter\r\n    this.bounds.extend(position);\r\n    this.map.fitBounds(this.bounds);\r\n};\r\n\r\nMap.selectMarker = function (marker) {\r\n    // Avant d'afficher le marqueur il faut tout d'abord désactiver\r\n    // les marqueur afficher\r\n    this.resetSelectedMarkers();\r\n\r\n    // Changement de la couleur du marqueur\r\n    // TODO: utiliser la fonction getIcon(image)\r\n    marker.setIcon(this.icons.skyblue);\r\n\r\n    // Affichage de l'info window\r\n    marker.infowindow.open(this.map, marker);\r\n\r\n    setTimeout(function() {\r\n        $('.map-infowindow .close').on('click', function (e) {\r\n            Map.resetSelectedMarkers();\r\n            Map.resetSelectedModules();\r\n        });\r\n    },200);\r\n\r\n    // On séléctionne le module associé\r\n    this.selectModule(marker.index);\r\n};\r\n\r\nMap.highlightMarker = function (marker) {\r\n    // change la couleur de l'icon en bleu claire\r\n    marker.setIcon(this.icons.skyblue);\r\n};\r\n\r\nMap.unHighlightMarkers = function () {\r\n    // On remet les marqueur bleu sauf pour celle sélétionnée\r\n    for (let marker of this.markers) {\r\n        if (marker.infowindow.isOpen()) {\r\n            marker.setIcon(this.icons.skyblue);\r\n        } else {\r\n            marker.setIcon(this.icons.blue);\r\n        }\r\n    }\r\n};\r\n\r\nMap.resetSelectedMarkers = function () {\r\n    // Fermeture des info window pour tout les marqueur\r\n    this.markers.forEach(function (marker) {\r\n        marker.infowindow.close(map, marker);\r\n        marker.setIcon(this.icons.blue);\r\n    }, this);\r\n};\r\n\r\n\r\nMap.selectModule = function (index) {\r\n    \r\n    this.resetSelectedModules();\r\n\r\n    let $mapModules = $('.map-modules');\r\n    let $mapModule = $('.map-module[data-index=\"' + index + '\"]');\r\n\r\n    // On active le module souhaité\r\n    $mapModule.addClass('active');\r\n\r\n    // Scroll vers le module\r\n    $mapModules.scrollTop(\r\n        $mapModules.scrollTop() +\r\n        $mapModule.position().top\r\n    );\r\n};\r\n\r\n// Rendre tout les marqueurs déjà séléctionnées \r\n// dans leur etat initial\r\nMap.resetSelectedModules = function () {\r\n    $('.map-module').removeClass('active');\r\n};\r\n\r\nMap.init();\r\n\r\nwindow.initMap = function () {\r\n    // Initialisation des icons\r\n    Map.icons = {\r\n        blue: {\r\n            url: '/images/icons/marker-blue.svg',\r\n            scaledSize: new google.maps.Size(20, 32),\r\n            origin: new google.maps.Point(0, 0), // origin\r\n            anchor: new google.maps.Point(0, 0)\r\n        }, // anchor'/images/icons/marker-blue.svg',\r\n        skyblue: {\r\n            url: '/images/icons/marker-skyblue.svg',\r\n            scaledSize: new google.maps.Size(20, 32),\r\n            origin: new google.maps.Point(0, 0), // origin\r\n            anchor: new google.maps.Point(0, 0)\r\n\r\n        }\r\n    };\r\n\r\n    let paris = {\r\n        lat: 48.858,\r\n        lng: 2.325\r\n    };\r\n\r\n    // Initialisation de la map\r\n    Map.map = new google.maps.Map(document.getElementById('map'), {\r\n        center: paris,\r\n        zoom: 12,\r\n        zoomControl: true,\r\n        mapTypeControl: false,\r\n        scaleControl: true,\r\n        streetViewControl: false,\r\n        rotateControl: false,\r\n        fullscreenControl: false,\r\n        styles: [\r\n            {\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#f5f5f5\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"elementType\": \"labels.icon\",\r\n              \"stylers\": [\r\n                {\r\n                  \"visibility\": \"off\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#616161\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"elementType\": \"labels.text.stroke\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#f5f5f5\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"administrative.land_parcel\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#bdbdbd\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"poi\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#eeeeee\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"poi\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#757575\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"poi.park\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#e5e5e5\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"poi.park\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#9e9e9e\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"road\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#ffffff\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"road.arterial\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#757575\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"road.highway\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#dadada\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"road.highway\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#616161\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"road.local\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#9e9e9e\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"transit.line\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#e5e5e5\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"transit.station\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#eeeeee\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"water\",\r\n              \"elementType\": \"geometry\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#c9c9c9\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"water\",\r\n              \"elementType\": \"geometry.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#2d6cb2\"\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              \"featureType\": \"water\",\r\n              \"elementType\": \"labels.text.fill\",\r\n              \"stylers\": [\r\n                {\r\n                  \"color\": \"#9e9e9e\"\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n    });\r\n\r\n    // Initialisation des limites\r\n    Map.bounds = new google.maps.LatLngBounds();\r\n\r\n\r\n    $('.map-module').each(function (index) {\r\n        let position = {\r\n            lat: parseFloat($(this).attr('data-lat')),\r\n            lng: parseFloat($(this).attr('data-lng'))\r\n        };\r\n        let title = $('.title', this).text();\r\n\r\n        let content = '<div class=\"module map-infowindow\" data-index=\"' + index + '\">' +\r\n                '<span class=\"close\"></span>' +\r\n            $(this).html() +\r\n            '</div>';\r\n\r\n        let icon = Map.icons.blue;\r\n\r\n        let type = null;\r\n\r\n        if ($('.type', this).length) {\r\n            type = $('.type', this).attr('class')\r\n                                        .split(' ')\r\n                                        .find(function (className) {\r\n                                            return className && className != 'type' \r\n                                        });\r\n            $(this).attr('data-type', type);\r\n        }\r\n\r\n        $(this).attr('data-index', index)\r\n\r\n        // Pour chaque module on crée un marqueur\r\n        Map.setMarker({ icon, position, title, content, index, type });\r\n\r\n        // Gérer l'effet de hover sur les modules\r\n        $(this).mouseenter(function () {\r\n            $(this).addClass('hover');\r\n            let index = parseInt($(this).attr('data-index'));\r\n            // Trouvé le marqueur lié au module séléctionné\r\n            let markers = Map.markers.filter(function (item) {\r\n                return item.index === index;\r\n            });\r\n            if (markers) {\r\n                Map.highlightMarker(markers[0])\r\n            }\r\n        })\r\n        .mouseleave(function () {\r\n            $(this).removeClass('hover');\r\n            Map.unHighlightMarkers();\r\n        }).click(function () {\r\n            let markers = Map.markers.filter(function (item) {\r\n                return item.index === index;\r\n            });\r\n            if (markers) {\r\n                Map.selectMarker(markers[0])\r\n            }\r\n        });\r\n    });\r\n\r\n    $('.type-changer').on('change', function () {\r\n        switch ($(this).val()) {\r\n            case 'devis':\r\n            case 'rdv':\r\n            case 'commande':\r\n                let type = $(this).val();\r\n\r\n                $('.map-module').hide();\r\n                $('.map-module[data-type=' + type + ']').show();\r\n\r\n                Map.resetSelectedMarkers();\r\n\r\n                Map.markers.forEach(function (marker) {\r\n                    if (marker.type && marker.type !== type) {\r\n                        marker.setMap(null);\r\n                    } else {\r\n                        marker.setMap(Map.map);\r\n                    }\r\n                });\r\n                break;\r\n            default:\r\n                $('.map-module').show();\r\n                Map.markers.forEach(function (marker) {\r\n                    marker.setMap(Map.map);\r\n                });\r\n        }\r\n    });\r\n};\r\n","'use strict';\r\n\r\nvar $ = require('jquery');\r\n\r\nvar colorify = function () {\r\n\r\n};\r\n\r\n/////js a optimiser \r\n$('.bloc-strawberry button.add').click(function () {\r\n    var colorReference = $(this).parent('div').attr('class').substr(5);\r\n    $('.modal-body').removeClass('turquois orange blue purple').addClass(colorReference);\r\n    $('.modal-body .custom-select').removeClass('turquois orange blue purple').addClass(colorReference);\r\n});\r\n$('.bloc-turquois button.add').click(function () {\r\n    var colorReference = $(this).parent('div').attr('class').substr(5);\r\n    $('.modal-body').removeClass('strawberry orange blue purple').addClass(colorReference);\r\n    $('.modal-body .custom-select').removeClass('strawberry orange blue purple').addClass(colorReference);\r\n});\r\n$('.bloc-orange button.add').click(function () {\r\n    var colorReference = $(this).parent('div').attr('class').substr(5);\r\n    $('.modal-body').removeClass('strawberry turquois blue purple').addClass(colorReference);\r\n    $('.modal-body .custom-select').removeClass('strawberry turquois blue purple').addClass(colorReference);\r\n});\r\n$('.bloc-blue button.add').click(function () {\r\n    var colorReference = $(this).parent('div').attr('class').substr(5);\r\n    $('.modal-body').removeClass('strawberry turquois orange purple').addClass(colorReference);\r\n    $('.modal-body .custom-select').removeClass('strawberry turquois orange purple').addClass(colorReference);\r\n});\r\n$('.bloc-purple button.add').click(function () {\r\n    var colorReference = $(this).parent('div').attr('class').substr(5);\r\n    $('.modal-body').removeClass('strawberry turquois orange blue').addClass(colorReference);\r\n    $('.modal-body .custom-select').removeClass('strawberry turquois orange blue').addClass(colorReference);\r\n});\r\n\r\n$(document).on('click', '.close', function () {\r\n    $('select').click(function (event) {\r\n        event.stopPropagation();\r\n    });\r\n});\r\n\r\n//criteres\r\n\r\n\r\n$('.criteria button.chevron').click(function (event) {\r\n    event.preventDefault();\r\n\r\n    if ($(this).hasClass('active')) {\r\n        $(this).removeClass('active');\r\n        $('.criteria-toggle').addClass('hidden');\r\n\r\n    } else {\r\n        $(this).addClass('active');\r\n        $('.criteria-toggle').removeClass('hidden');\r\n    }\r\n\r\n});\r\n\r\n//sous criteres\r\n$('.custom-list-checkbox-select').click(function () {\r\n    if ($(this).hasClass('active')) {\r\n        $(this).removeClass('active');\r\n        $(this).siblings().addClass('hidden');\r\n    } else {\r\n        $(this).addClass('active');\r\n        $(this).siblings().removeClass('hidden');\r\n    }\r\n\r\n});\r\n//map\r\n\r\n$('button.line-view-push').click(function () {\r\n    if ($('.map-modules').hasClass('line-view')) {\r\n    } else {\r\n        $('.map-modules').removeClass('grid-view');\r\n        $('.map-modules').addClass('line-view');\r\n    }\r\n});\r\n\r\n$('button.grid-view-push').click(function () {\r\n    if ($('.map-modules').hasClass('grid-view')) {\r\n    } else {\r\n        $('.map-modules').removeClass('line-view');\r\n        $('.map-modules').addClass('grid-view');\r\n    }\r\n});"]}